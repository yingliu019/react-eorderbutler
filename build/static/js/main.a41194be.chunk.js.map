{"version":3,"sources":["assets/images/EOB.png","assets/images/EOB.svg","services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","components/Dataview.js","components/UserInput.js","components/SearchBar.js","components/Main.js","components/demo.js","components/Detail.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","API_URL","username","password","axios","post","then","response","localStorage","setItem","JSON","stringify","data","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","token","Authorization","get","headers","Home","eobpng","width","Profile","currentUser","getCurrentUser","Dataview","PostData","map","postDetail","index","key","Date","date","toISOString","slice","merchant","orderNumber","totalPrice","status","UserInput","userInput","handleInputChange","handleAdd","console","log","text","handleAddTodo","placeholder","aria-label","aria-describedby","onClick","React","SearchBar","handleSearch","dataSource","itemMerchant","orderId","catch","handleEnter","handlePressEnter","onPressEnter","url_getall","Popup_m","closePopup","Main","toggleClose","sort","a","b","showPopup","loadInfoAdd","method","url","loadInfoSearch","txt","useRowStyles","makeStyles","root","borderBottom","Row","row","useState","open","setOpen","classes","Fragment","TableRow","TableCell","IconButton","size","align","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","component","Table","TableHead","TableBody","items","historyRow","itemId","scope","itemName","quantity","price","Demo","TableContainer","Paper","Detail","loadInfo","App","logOut","showModeratorBoard","showAdminBoard","undefined","roles","includes","logout","eob","to","href","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a41194be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EOB.99277250.png\";","module.exports = __webpack_public_path__ + \"static/media/EOB.0f1b24c2.svg\";","import axios from \"axios\";\n\nconst API_URL = \"http://54.84.55.238/eOrderButler/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"login\", {\n        username,\n        password\n      })\n      .then(response => {\n        //debugger\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    //debugger\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          //this.props.history.push(\"/main\");\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n     return { Authorization: 'Bearer ' + user.token }; // for Spring Boot back-end\n    //return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n  debugger\n}\n","//import axios from 'axios';\nimport axios, * as others from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://54.84.55.238/eOrderButler/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n\n  getAllShoppingOrders() {\n    return axios.get(API_URL + 'getAllShoppingOrders', { headers: authHeader() });\n  }\n\n\n\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\r\nimport eobpng from \"../assets/images/EOB.png\"\r\n\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n\r\n            <div className = \"eobpngstyle\">\r\n                <img src={eobpng} width = \"1100\" ></img>\r\n\r\n                {/*<img src={eobpng} height = \"300\" align={\"center\"}></img>*/}\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h2>Welcome to E-order Butler! </h2>\r\n                    <h4>You can now easily track everything your purchase online!</h4>\r\n                </header>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n      // debugger\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>Hello {currentUser.username}</strong> :)\n          </h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","/*eslint-env jquery*/\r\n\r\n\r\nimport React, {Component} from 'react';\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\n//import PostData from \"../assets/json_file/userOrder.json\"\r\n\r\nclass Dataview extends Component {\r\n\r\n    render() {\r\n\r\n        const PostData = this.props.PostData;\r\n\r\n        // const {\r\n        //     // something\r\n        // } = this.props.PostData; // get the only info we need\r\n\r\n        return(\r\n\r\n            <table className=\"myFormat table table-bordered table-striped table-wrapper-scroll-y my-custom-scrollbar\" >\r\n                <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Merchant</th>\r\n                    <th>Order Number</th>\r\n                    <th>Total Price ($)</th>\r\n                    <th>Status</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {PostData.map((postDetail, index) => {\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>{new Date(postDetail.date).toISOString().slice(0,10)}</td>\r\n                            <td>{postDetail.merchant}</td>\r\n                            <td>{postDetail.orderNumber}</td>\r\n                            <td>{postDetail.totalPrice}</td>\r\n                            <td>{postDetail.status}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dataview;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass UserInput extends React.Component {\r\n    constructor (props) {\r\n        super (props) ;\r\n        this.state = { userInput : '' } ;\r\n        this.handleInputChange = this.handleInputChange.bind(this) ;\r\n        this.handleAdd = this.handleAdd.bind(this) ;\r\n    }\r\n\r\n    handleInputChange (e) {\r\n        this.setState({ userInput : e.target.value }) ;\r\n        console.log(this.state.userInput)\r\n    }\r\n\r\n    handleAdd () {\r\n        const text = this.state.userInput ;\r\n        if (text) {\r\n            this.props.handleAddTodo(text) ;\r\n        }\r\n        this.setState({ userInput : '' }) ;\r\n        // redirect page\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"input-group mb-3\">\r\n                <input onChange={this.handleInputChange} value={this.state.userInput} type=\"text\" className=\"form-control\" placeholder=\"Add Order URL\"\r\n                       aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"/>\r\n                    <div className=\"input-group-append\">\r\n                        <button onClick={this.handleAdd} className=\"btn btn-secondary add-button\" type=\"button\">Add</button>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n        // {/*<div className=\"add-item\">*/}\r\n        // {/*    <input onChange= { this . handleInputChange } value= { this . state . userInput } />*/}\r\n        // {/*    <button onClick= { this . handleAdd } > Add </button>*/}\r\n        // {/*</div>*/}\r\n\r\nexport default UserInput;","import React , {Component} from 'react' ;\r\nimport { AutoComplete , Input , Icon,  } from 'antd' ;\r\n\r\nimport axios, * as others from 'axios';\r\nimport authHeader from '../services/auth-header';\r\n\r\nconst url_search = \"http://54.84.55.238/eOrderButler/search/\";\r\n\r\n\r\nclass SearchBar extends Component {\r\n    constructor (props) {\r\n        super (props) ;\r\n        this.state = { userInput : '' } ;\r\n        this.handleSearch = this.handleSearch.bind(this) ;\r\n        this.handleInputChange = this.handleInputChange.bind(this) ;\r\n        this.handleEnter = this.handleEnter.bind(this) ;\r\n    }\r\n\r\n    handleSearch = (value) => {\r\n        // 每输入一个char就update result，双向绑定\r\n        axios.get(url_search + value, { headers: authHeader() })\r\n            .then((response) => {\r\n                console.log(response);\r\n                this.setState ({\r\n                    // clean response data\r\n                    dataSource : !value ?\r\n                        [] : response.data.map ((postDetail, index) => ({\r\n                            itemMerchant : postDetail.merchant ,\r\n                            orderId : postDetail.orderId ,\r\n                        }))\r\n                }).catch((error)=>{\r\n                    console.log(error);\r\n                });\r\n            })\r\n    }\r\n\r\n    handleInputChange (e) {\r\n        this.setState({ userInput : e.target.value }) ;\r\n        console.log(this.state.userInput)\r\n    }\r\n\r\n    handleEnter () {\r\n        const text = this.state.userInput ;\r\n        if (text) {\r\n            this.props.handlePressEnter(text) ;\r\n        }\r\n        this.setState({ userInput : '' }) ;\r\n    }\r\n\r\n    render () {\r\n        // const { dataSource } = this.state ;\r\n        // const options = dataSource. map ((postDetail) => (\r\n        //     <Option key = {postDetail.merchant} value = {postDetail.orderId}\r\n        //             className =\"player-option\" >\r\n        //         <span className =\"player-option-label\" > {postDetail.orderId } </span>\r\n        //     </Option>\r\n        // ));\r\n        return (\r\n            <div className = \"search-bar\" >\r\n\r\n                <Input\r\n                    onChange={this.handleInputChange} value={this.state.userInput} onPressEnter={this.handleEnter} type=\"text\"\r\n                       className=\"form-control\" placeholder=\"Search Item Here\"\r\n                       aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                {/*<Input onPressEnter={this.onPressEnter} placeholder=\"This is search bar\" />*/}\r\n            </div>\r\n\r\n        ) ;\r\n    }\r\n}\r\n\r\n\r\n\r\n// class SearchBar extends Component {\r\n//     render () {\r\n//         return (\r\n//             <form className=\"form-inline d-flex justify-content-center md-form form-sm active-cyan active-cyan-2 mt-2\">\r\n//                 <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n//                 <input className=\"form-control form-control-sm ml-3 w-75, search-bar\" type=\"text\" placeholder=\"Search\"\r\n//                        aria-label=\"Search\"/>\r\n//             </form>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n// {/*<AutoComplete*/}\r\n// {/*    className =\"search-bar\"*/}\r\n// {/*    dataSource = {options}*/}\r\n// {/*    onKeyDown = {this.onPressEnter}*/}\r\n// {/*    // onSearch = { this.handleSearch }*/}\r\n// {/*    placeholder =\"Search Your Item\"*/}\r\n// {/*    size =\"large\"*/}\r\n// {/*    optionLabelProp =\"value\"*/}\r\n// {/*>*/}\r\n// {/*    <Input suffix = { <Icon type =\"search\" className =\"certain-category-icon\"*/}\r\n// {/*    /> } />*/}\r\n// {/*</AutoComplete>*/}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport Dataview from './Dataview';\r\nimport UserInput from './UserInput';\r\nimport SearchBar from './SearchBar' ;\r\nimport UserService from \"../services/user.service\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport axios, * as others from 'axios';\r\nimport authHeader from '../services/auth-header';\r\n\r\nconst url_getall = \"http://54.84.55.238/eOrderButler/getAllShoppingOrders\";\r\nconst url_add = \"http://54.84.55.238/eOrderButler/addShoppingOrder\";\r\nconst url_search = \"http://54.84.55.238/eOrderButler/search/\";\r\n\r\n// const localDir = \"../assets/json_file/userOrder.json\";\r\n\r\n\r\nclass Popup_m extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='popup'>\r\n                <div className='popup_inner'>\r\n                    <h1>{this.props.text}</h1>\r\n                    <button className='closeit' onClick={this.props.closePopup}>Back to Home</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Main extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            PostData: [],\r\n            showPopup: false\r\n        };\r\n        this.handleAddTodo = this.handleAddTodo.bind(this);\r\n        this.handlePressEnter = this.handlePressEnter.bind(this);\r\n    }\r\n\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    toggleClose = () => {\r\n        axios.get(url_getall, { headers: authHeader() })\r\n            .then((response) => {\r\n                console.log(response);\r\n                this.setState({PostData: response.data.sort((a, b) => b.date - a.date)})\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            });\r\n\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios.get(url_getall, { headers: authHeader() })\r\n            .then((response) => {\r\n                // this.setState({PostData: response.data})\r\n                this.setState({PostData: response.data.sort((a, b) => b.date - a.date)})\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    loadInfoAdd = (text) => {\r\n        console.log(\"we are adding\");\r\n        console.log(text);\r\n        const text1 = \"https://ship.sephora.com/tracking/sephora/ups?dzip=63112-1114&locale=en_US&order_number=25275089654&tracking_numbers=1Z5R68920339139401\"\r\n        const text2 = \"https://ship.sephora.com/tracking/sephora/ups?dzip=63112-1114&locale=en_US&order_number=25273301663&tracking_numbers=1Z5R68990310574080\"\r\n        axios({\r\n            method: 'post',\r\n            url: url_add,\r\n            headers: {...authHeader(),'Content-Type': 'text/plain'},\r\n            data: text, // This is the body part\r\n        }).then((response) => {\r\n            console.log(response);\r\n            this.setState({showPopup: true})\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    loadInfoSearch = (txt) => {\r\n        axios.get(url_search + txt, { headers: authHeader() })\r\n            .then((response) => {\r\n                console.log(response);\r\n                this.setState({PostData: response.data.sort((a, b) => b.date - a.date)})\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handlePressEnter = (name) => {\r\n        this.loadInfoSearch(name);\r\n    }\r\n\r\n    handleAddTodo = (name) => {\r\n        this.loadInfoAdd(name);\r\n    }\r\n\r\n\r\n    render () {\r\n        //debugger;\r\n        return (\r\n            <div className =\"main\" >\r\n                {/*<button onClick={this.togglePopup.bind(this)}>show popup</button>*/}\r\n                <div className='app'>\r\n                    {this.state.showPopup ?\r\n                        <Popup_m\r\n                            text='Congrats! You just added your order. (◕‿◕✿)'\r\n                            closePopup={this.toggleClose.bind(this)}\r\n                        />\r\n                        : null\r\n                    }\r\n                </div>\r\n\r\n\r\n                <SearchBar className =\"search\"\r\n                    handlePressEnter = { this.handlePressEnter } />\r\n\r\n\r\n                <div className =\"dataview\" >\r\n                    <Dataview PostData = { this.state.PostData }/>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <div className =\"add\" >\r\n                    <UserInput handleAddTodo= { this.handleAddTodo } />\r\n                </div>\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\n\r\nexport default Main;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport axios from \"axios\";\r\nimport authHeader from \"../services/auth-header\";\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"right\">{new Date(row.date).toISOString().slice(0,10)}</TableCell>\r\n                <TableCell align=\"right\">{row.merchant}</TableCell>\r\n                <TableCell align=\"right\">{row.orderNumber}</TableCell>\r\n                <TableCell align=\"right\">{row.totalPrice}</TableCell>\r\n                <TableCell align=\"right\">{row.status}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                Items Details\r\n                            </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Item</TableCell>\r\n                                        <TableCell>Status</TableCell>\r\n                                        <TableCell align=\"right\">Amount</TableCell>\r\n                                        <TableCell align=\"right\">Total Price ($)</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {row.items.map((historyRow) => (\r\n                                        <TableRow key={historyRow.itemId}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {historyRow.itemName}\r\n                                            </TableCell>\r\n                                            <TableCell>{historyRow.status}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.quantity}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {historyRow.price}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        calories: PropTypes.number.isRequired,\r\n        carbs: PropTypes.number.isRequired,\r\n        fat: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        price: PropTypes.number.isRequired,\r\n        protein: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\n\r\nclass Demo extends React.Component {\r\n\r\n    render() {\r\n        const PostData = this.props.PostData;\r\n\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"collapsible table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell />\r\n                            <TableCell align=\"right\">Date</TableCell>\r\n                            <TableCell align=\"right\">Merchant</TableCell>\r\n                            <TableCell align=\"right\">Order Number</TableCell>\r\n                            <TableCell align=\"right\">Total Price ($)</TableCell>\r\n                            <TableCell align=\"right\">Status</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {PostData.map((row) => (\r\n                            <Row key={row.name} row={row} />\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Demo;","import React, { Component }  from 'react';\r\nimport Dataview from './Dataview';\r\nimport UserInput from './UserInput';\r\nimport SearchBar from './SearchBar' ;\r\nimport UserService from \"../services/user.service\";\r\nimport ReactTable from 'react-table';\r\nimport Demo from './demo';\r\n\r\nimport axios, * as others from 'axios';\r\nimport authHeader from '../services/auth-header';\r\nimport { data, columns, subComponent } from './tableSetup';\r\n\r\nconst url_getall = \"http://54.84.55.238/eOrderButler/getAllShoppingOrders\";\r\nconst url_search = \"http://54.84.55.238/eOrderButler/search/\";\r\n\r\nclass Detail extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            PostData: [],\r\n        };\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        await axios.get(url_getall, { headers: authHeader() })\r\n            .then((response) => {\r\n                console.log(response);\r\n                // this.setState({PostData: response.data})\r\n                this.setState({PostData: response.data.sort((a, b) => b.date - a.date)})\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handlePressEnter = (name) => {\r\n        this.loadInfo(name);\r\n    }\r\n\r\n    loadInfo = (txt) => {\r\n        axios.get(url_search + txt, { headers: authHeader() })\r\n            .then((response) => {\r\n                // this.setState({PostData: response.data})\r\n                this.setState({PostData: response.data.sort((a, b) => b.date - a.date)})\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div className =\"main\">\r\n                <SearchBar\r\n                    handlePressEnter = { this.handlePressEnter } />\r\n                <div >\r\n                    <Demo PostData = { this.state.PostData }/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Detail;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nimport Login from \"./login.component\";\r\nimport Register from \"./register.component\";\r\nimport Home from \"./home.component\";\r\nimport Profile from \"./profile.component\";\r\nimport BoardUser from \"./board-user.component\";\r\nimport BoardModerator from \"./board-moderator.component\";\r\nimport BoardAdmin from \"./board-admin.component\";\r\n\r\nimport Main from './Main';\r\nimport Detail from './Detail';\r\nimport eob from \"../assets/images/EOB.svg\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logOut = this.logOut.bind(this);\r\n\r\n        this.state = {\r\n            showModeratorBoard: false,\r\n            showAdminBoard: false,\r\n            currentUser: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            this.setState({\r\n                currentUser: user,\r\n                showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\r\n            });\r\n        }\r\n    }\r\n\r\n    logOut() {\r\n        AuthService.logout();\r\n    }\r\n\r\n    render() {\r\n        const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n                        <img src={eob} className=\"App-logo\" alt=\"logo\" />\r\n                        <Link to={\"/home\"} className=\"navbar-brand\">\r\n                            EOrderButler\r\n                        </Link>\r\n\r\n                        <div className=\"navbar-nav mr-auto\">\r\n                            <ul className=\"navbar-nav\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/main\"} className=\"nav-link\"> Home\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/detail\"} className=\"nav-link\"> Details\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            {showModeratorBoard && (\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/mod\"} className=\"nav-link\">\r\n                                        Moderator Board\r\n                                    </Link>\r\n                                </li>\r\n                            )}\r\n\r\n                            {showAdminBoard && (\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/admin\"} className=\"nav-link\">\r\n                                        Admin Board\r\n                                    </Link>\r\n                                </li>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n\r\n                        {currentUser ? (\r\n                            <div className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/profile\"} className=\"nav-link\">\r\n                                        {currentUser.username}\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                                        LogOut\r\n                                    </a>\r\n                                </li>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/login\"} className=\"nav-link\">\r\n                                        Login\r\n                                    </Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={\"/register\"} className=\"nav-link\">\r\n                                        Sign Up\r\n                                    </Link>\r\n                                </li>\r\n                            </div>\r\n                        )}\r\n                    </nav>\r\n\r\n                    <div className=\"container mt-3\">\r\n                        <Switch>\r\n                            <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n                            <Route exact path=\"/login\" component={Login} />\r\n                            <Route exact path=\"/register\" component={Register} />\r\n                            <Route exact path=\"/profile\" component={Profile} />\r\n                            {/*<Route path=\"/user\" component={BoardUser} />*/}\r\n                            {/*<Route path=\"/mod\" component={BoardModerator} />*/}\r\n                            {/*<Route path=\"/admin\" component={BoardAdmin} />*/}\r\n                            <Route path=\"/main\" component={Main} />\r\n                            <Route path=\"/detail\" component={Detail} />\r\n\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*<div className=\"App\">*/}\r\n                {/*    <TopNavBar/>*/}\r\n                {/*    <Main/>*/}\r\n                {/*</div>*/}\r\n            </Router>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}